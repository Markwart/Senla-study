-- MySQL Script generated by MySQL Workbench
-- Fri Aug 30 22:37:14 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema DB-task-2
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema DB-task-2
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DB-task-2` DEFAULT CHARACTER SET utf8 ;
USE `DB-task-2` ;

-- -----------------------------------------------------
-- Table `DB-task-2`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB-task-2`.`product` (
  `maker` VARCHAR(50) NOT NULL,
  `model` VARCHAR(50) NOT NULL,
  `type` VARCHAR(50) NOT NULL,
  UNIQUE INDEX `model_UNIQUE` (`model` ASC) VISIBLE,
  PRIMARY KEY (`model`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB-task-2`.`pc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB-task-2`.`pc` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `model` VARCHAR(50) NOT NULL,
  `speed` INT NOT NULL,
  `ram` INT NOT NULL,
  `hd` REAL NOT NULL,
  `cd` VARCHAR(10) NOT NULL,
  `price` DECIMAL NULL,
  PRIMARY KEY (`id`),
  INDEX `model_id_idx` (`model` ASC) VISIBLE,
  UNIQUE INDEX `code_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `pc_to_product(model)`
    FOREIGN KEY (`model`)
    REFERENCES `DB-task-2`.`product` (`model`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB-task-2`.`laptop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB-task-2`.`laptop` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `model` VARCHAR(50) NOT NULL,
  `speed` INT NOT NULL,
  `ram` INT NOT NULL,
  `hd` REAL NOT NULL,
  `price` DECIMAL NULL,
  `screen` TINYINT(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `laptop_to_product(model)_idx` (`model` ASC) VISIBLE,
  UNIQUE INDEX `code_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `laptop_to_product(model)`
    FOREIGN KEY (`model`)
    REFERENCES `DB-task-2`.`product` (`model`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB-task-2`.`printer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB-task-2`.`printer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `model` VARCHAR(50) NOT NULL,
  `color` CHAR(1) NOT NULL,
  `type` VARCHAR(10) NOT NULL,
  `price` DECIMAL NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `model_idx` (`model` ASC) VISIBLE,
  CONSTRAINT `printer_to_product(model)`
    FOREIGN KEY (`model`)
    REFERENCES `DB-task-2`.`product` (`model`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `DB-task-2`.`product`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB-task-2`;
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Samsung', 'PC-X1', 'pc');
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Sony', 'L-S1', 'laptop');
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Asus', 'PR-A1', 'printer');
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Samsung', 'PR-X2', 'printer');
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Sony', 'PC-S1', 'pc');
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Asus', 'L-A2', 'laptop');
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Sony', 'PR-S2', 'printer');
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Asus', 'PC-A1', 'pc');
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Asus', 'L-A1', 'laptop');
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Asus', 'PC-A2', 'pc');
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Samsung', 'PC-X2', 'pc');
INSERT INTO `DB-task-2`.`product` (`maker`, `model`, `type`) VALUES ('Samsung', 'PC-X3', 'pc');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB-task-2`.`pc`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB-task-2`;
INSERT INTO `DB-task-2`.`pc` (`id`, `model`, `speed`, `ram`, `hd`, `cd`, `price`) VALUES (1, 'PC-X1', 3600, 2048, 1000, '12x', 750);
INSERT INTO `DB-task-2`.`pc` (`id`, `model`, `speed`, `ram`, `hd`, `cd`, `price`) VALUES (2, 'PC-S1', 4200, 4096, 750, '24x', 1200);
INSERT INTO `DB-task-2`.`pc` (`id`, `model`, `speed`, `ram`, `hd`, `cd`, `price`) VALUES (3, 'PC-A1', 2600, 4096, 500, '12x', 450);
INSERT INTO `DB-task-2`.`pc` (`id`, `model`, `speed`, `ram`, `hd`, `cd`, `price`) VALUES (4, 'PC-A2', 2900, 2048, 500, '8x', 500);
INSERT INTO `DB-task-2`.`pc` (`id`, `model`, `speed`, `ram`, `hd`, `cd`, `price`) VALUES (5, 'PC-X2', 4200, 4096, 1500, '24x', 1500);
INSERT INTO `DB-task-2`.`pc` (`id`, `model`, `speed`, `ram`, `hd`, `cd`, `price`) VALUES (6, 'PC-X3', 4300, 4096, 2000, '24x', 2000);

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB-task-2`.`laptop`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB-task-2`;
INSERT INTO `DB-task-2`.`laptop` (`id`, `model`, `speed`, `ram`, `hd`, `price`, `screen`) VALUES (1, 'L-S1', 700, 1024, 250, 300, 11);
INSERT INTO `DB-task-2`.`laptop` (`id`, `model`, `speed`, `ram`, `hd`, `price`, `screen`) VALUES (2, 'L-A2', 2600, 4096, 500, 1200, 15);
INSERT INTO `DB-task-2`.`laptop` (`id`, `model`, `speed`, `ram`, `hd`, `price`, `screen`) VALUES (3, 'L-A1', 1200, 2048, 750, 1100, 13);

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB-task-2`.`printer`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB-task-2`;
INSERT INTO `DB-task-2`.`printer` (`id`, `model`, `color`, `type`, `price`) VALUES (1, 'PR-A1', 'y', 'Laser', 1100);
INSERT INTO `DB-task-2`.`printer` (`id`, `model`, `color`, `type`, `price`) VALUES (2, 'PR-X2', 'y', 'Jet', 500);
INSERT INTO `DB-task-2`.`printer` (`id`, `model`, `color`, `type`, `price`) VALUES (3, 'PR-S2', 'n', 'Matrix', 300);

COMMIT;

